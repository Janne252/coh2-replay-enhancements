---@type ScarModule[]
local modules = loadfile("replay-enhancements\\scar\\modules.scar")()

-- Will be passed to runtime. Bit of repetition and the data passing could be more sophisticated
-- instead of constructing raw assignment statements but it's fine for now.
local __replayenhancements_settings = {
    version = "0.3.0",
    enable_debug = true,
    event_indicator_display_seconds = 60,
}

-- init template
-- dofile("replay-enhancements\\init.scar")
function ReplayEnhancements_Init()
    -- in-game SCAR VM
    if __replayenhancements_loader == "autotest" then
        for _, module in ipairs(modules) do
            -- Tests load "common" and "tests" scopes
            if module.scope == "mod" then
                loadfile(module.filepath)()
            end
        end
        ENABLE_DEBUG = __replayenhancements_settings.enable_debug
        ReplayEnhancements.Version = __replayenhancements_settings.version
        ReplayEnhancements.EventIndicatorDisplaySeconds = __replayenhancements_settings.event_indicator_display_seconds
    -- in-game console SCAR VM
    else
        for _, module in ipairs(modules) do
            if module.scope == "common" or module.scope == "mod" then
                -- Any string manipulation (catenation, string.format) seems to reduce escaped directory separators
                Scar_DoString(string.format([[loadfile("%s")()]], module.filepath:gsub("\\", "\\\\")))
            end
        end

        Scar_DoString(string.format([[ENABLE_DEBUG = %s]], tostring(__replayenhancements_settings.enable_debug)))
        Scar_DoString(string.format([[ReplayEnhancements.Version = "%s"]], __replayenhancements_settings.version))
        Scar_DoString(string.format([[ReplayEnhancements.EventIndicatorDisplaySeconds = %s]], __replayenhancements_settings.event_indicator_display_seconds))

        bind("CONTROL+D", [[Scar_DoString("ReplayEnhancements_RemoveClosestEventIndicator()")]])
    end
    
    print(string.format("Replay enhancements version %s initialized!", __replayenhancements_settings.version))
    if __replayenhancements_settings.enable_debug then
        print("Debugging is enabled!")
    end
end

ReplayEnhancements_Init()
