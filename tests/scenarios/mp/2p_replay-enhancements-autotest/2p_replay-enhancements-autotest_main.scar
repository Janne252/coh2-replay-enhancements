function ReplayEnhancementsAutoTest_Init()
	local modes = {Live = "live", RecordReplay = "record-replay"}
	local mode = modes.Live

	---@type ScarModule[]
	local modules = loadfile("replay-enhancements\\scar\\modules.scar")()
	for _, module in ipairs(modules) do
		if module.scope == "common" or module.scope == "tests" then
			loadfile(module.filepath)()
		end
	end

	if mode == modes.Live then
		__replayenhancements_loader = "autotest"
		-- Auto-initialize the mod
		loadfile("replay-enhancements\\init.scar")()
	end

	ReplayEnhancementsAutoTest_SetupTests()
	TestRunner_Init()
	Rule_AddOneShot(TestRunner_Start, 5)
end
Scar_AddInit(ReplayEnhancementsAutoTest_Init)

function ReplayEnhancementsAutoTest_SetupTests()
	-- Greatly increase event indicator display time
	ReplayEnhancements.EventIndicatorDisplaySeconds = 60 * 60
	local upgrades = {
		UPG.BRITISH.PLATOON_BOFORS_RESEARCH_MP,
	}

	local base_buildings = {
		{ebp = EBP.BRITISH.BRITISH_BUILDING_1_MP, offset = OFFSET_FRONT},
	}

	for i = 1, World_GetPlayerCount() do
		local player = World_GetPlayerAt(i)
		local starting_position = Player_GetStartingPosition(player)
		for _, upgrade in ipairs(upgrades) do
			Player_CompleteUpgrade(player, upgrade)
		end
		for _, item in ipairs(base_buildings) do
			local position = Util_GetOffsetPosition(starting_position, item.offset, 8)
			Test_CreateAndSpawnEntity(item.ebp, player, position, starting_position)
		end
	end

	local player01 = World_GetPlayerAt(1)
	local player02 = World_GetPlayerAt(2)

	Test_Describe({description = "Player name containing $\nPlayer name without $\nNon-ascii char player names", markers = mkr_test_miscellaneous}, function (context)
		local raketen_01 = Test_CreateAndSpawnSquad(SBP.WEST_GERMAN.RAKETENWERFER43_88MM_PUPPCHEN_ANTITANK_GUN_SQUAD_MP, player01, mkr_miscellaneous_01)
		local raketen_02 = Test_CreateAndSpawnSquad(SBP.WEST_GERMAN.RAKETENWERFER43_88MM_PUPPCHEN_ANTITANK_GUN_SQUAD_MP, player01, mkr_miscellaneous_02)
		local raketen_03 = Test_CreateAndSpawnSquad(SBP.WEST_GERMAN.RAKETENWERFER43_88MM_PUPPCHEN_ANTITANK_GUN_SQUAD_MP, player01, mkr_miscellaneous_03)
		-- Direct call
		ReplayEnhancements_TryRegisterEvent(raketen_01.squad, raketen_01.squad, ReplayEnhancements.EventType.Killed, {
			owner_display_name = Util_CreateLocString("$ch4k4L"), 
		})
		ReplayEnhancements_TryRegisterEvent(raketen_02.squad, raketen_02.squad, ReplayEnhancements.EventType.Killed, {
			owner_display_name = Util_CreateLocString("ch4k4L"), 
		})
		ReplayEnhancements_TryRegisterEvent(raketen_03.squad, raketen_03.squad, ReplayEnhancements.EventType.Killed, {
			owner_display_name = Util_CreateLocString("$ÄÖ¾"), 
		})
		Squad_Destroy(raketen_01.squad)
		Squad_Destroy(raketen_02.squad)
		Squad_Destroy(raketen_03.squad)
		
	end)
	
	Test_Describe({description = "Remove previous markers of same entities", markers = mkr_test_remove_previous_markers_of_same_entity}, function (context)
		local team_weapon = Test_CreateAndSpawnSquad(SBP.SOVIET.M1942_ZIS_3_76MM_AT_GUN_SQUAD_MP, player01, mkr_remove_previous_markers_of_same_entity_alpha_spawn)
		local vehicle = Test_CreateAndSpawnSquad(SBP.SOVIET.T_34_76_SQUAD_MP, player01, mkr_remove_previous_markers_of_same_entity_bravo_spawn)
		local team_weapon_recrew = Test_CreateAndSpawnSquad(SBP.SOVIET.COMBAT_ENGINEER_SQUAD_MP, player01, mkr_remove_previous_markers_of_same_entity_alpha_spawn)
		local vehicle_recrew = Test_CreateAndSpawnSquad(SBP.SOVIET.COMBAT_ENGINEER_SQUAD_MP, player01, mkr_remove_previous_markers_of_same_entity_bravo_spawn)
		Util_Delay(1, function()
			Cmd_AbandonTeamWeapon(team_weapon.sgroup)
			Cmd_CriticalHit(player01, vehicle.sgroup, CRIT.VEHICLE_ABANDON, 1)

			Util_Delay(4, function()
				local eg_team_weapon = EGroup_Create("")
				local eg_vehicle = EGroup_Create("")
				World_GetNeutralEntitiesNearMarker(eg_team_weapon, mkr_remove_previous_markers_of_same_entity_alpha_spawn)
				World_GetNeutralEntitiesNearMarker(eg_vehicle, mkr_remove_previous_markers_of_same_entity_bravo_spawn)

				if EGroup_Count(eg_team_weapon) == 0 then
					fatal("Could not find abandoned team weapon")
				end
				if EGroup_Count(eg_vehicle) == 0 then
					fatal("Could not find abandoned vehicle")
				end

				-- Move entities a bit to get a new position
				Entity_SetPosition(EGroup_GetSpawnedEntityAt(eg_team_weapon, 1), Util_GetOffsetPosition(Entity_GetPosition(EGroup_GetSpawnedEntityAt(eg_team_weapon, 1)), OFFSET_FRONT, 2))
				Entity_SetPosition(EGroup_GetSpawnedEntityAt(eg_vehicle, 1), Util_GetOffsetPosition(Entity_GetPosition(EGroup_GetSpawnedEntityAt(eg_vehicle, 1)), OFFSET_FRONT, 2))
				Command_SquadEntity(player01, team_weapon_recrew.sgroup, SCMD_CaptureTeamWeapon, eg_team_weapon, false)
				Command_SquadEntity(player01, vehicle_recrew.sgroup, SCMD_Recrew, eg_vehicle, false)

				Util_Delay(4, function()
					local sg_team_weapon = SGroup_Create("")
					local sg_vehicle = SGroup_Create("")
					World_GetSquadsNearMarker(player01, sg_team_weapon, mkr_remove_previous_markers_of_same_entity_alpha_spawn, OT_Player)
					World_GetSquadsNearMarker(player01, sg_vehicle, mkr_remove_previous_markers_of_same_entity_bravo_spawn, OT_Player)

					Cmd_AbandonTeamWeapon(sg_team_weapon)
					Cmd_CriticalHit(player01, sg_vehicle, CRIT.VEHICLE_ABANDON, 1)
				end)
			end)
		end)
	end)

	-- Infantry vs. Infantry [alpha]
	Test_Describe({description = "Report death of Grenadier squad", markers = mkr_test_infantry_vs_infantry_alpha}, function(context)
		local squad_infantry_vs_infantry_alpha_victim = Test_CreateAndSpawnSquad(SBP.GERMAN.GRENADIER_SQUAD_MP, player01, mkr_infantry_vs_infantry_spawn_alpha_01)
		local squad_infantry_vs_infantry_alpha_killer = Test_CreateAndSpawnSquad(SBP.SOVIET.SHOCK_TROOPS_MP, player02, mkr_infantry_vs_infantry_spawn_alpha_02)
	end)

	-- Infantry vs. Infantry [bravo]
	Test_Describe({description = "Report death of Conscript squad", markers = mkr_test_infantry_vs_infantry_bravo}, function(context)
		local squad_infantry_vs_infantry_bravo_killer = Test_CreateAndSpawnSquad(SBP.GERMAN.PANZER_GRENADIER_SQUAD_MP, player01, mkr_infantry_vs_infantry_spawn_bravo_01)
		local squad_infantry_vs_infantry_bravo_victim = Test_CreateAndSpawnSquad(SBP.SOVIET.CONSCRIPT_SQUAD_MP, player02, mkr_infantry_vs_infantry_spawn_bravo_02)
	end)

	-- HMG decrew vs. infantry [alpha]
	Test_Describe({description = "Report abandon of MG42", markers = mkr_test_hmg_vs_infantry_alpha}, function(context)
		local squad_hmg_vs_infantry_alpha_victim = Test_CreateAndSpawnSquad(SBP.GERMAN.MG42_HEAVY_MACHINE_GUN_SQUAD_MP, player01, mkr_hmg_vs_infantry_spawn_alpha_02, mkr_hmg_vs_infantry_spawn_alpha_facing)
		local squad_hmg_vs_infantry_alpha_killer = Test_CreateAndSpawnSquad(SBP.SOVIET.SHOCK_TROOPS_MP, player02, mkr_hmg_vs_infantry_spawn_alpha_01)
	end)

	-- HMG decrew vs. infantry [bravo]
	Test_Describe({description = "Report abandon of Maxim", markers = mkr_test_hmg_vs_infantry_bravo}, function(context)
		local squad_hmg_vs_infantry_bravo_killer = Test_CreateAndSpawnSquad(SBP.GERMAN.PANZER_GRENADIER_SQUAD_MP, player01, mkr_hmg_vs_infantry_spawn_bravo_01)
		local squad_hmg_vs_infantry_bravo_victim = Test_CreateAndSpawnSquad(SBP.SOVIET.M1910_MAXIM_HEAVY_MACHINE_GUN_SQUAD_MP, player02, mkr_hmg_vs_infantry_spawn_bravo_02, mkr_hmg_vs_infantry_spawn_bravo_facing)
	end)

	-- AT Gun decrew vs. infantry [alpha]
	Test_Describe({description = "Report abandon of Pak40", markers = mkr_test_atgun_vs_infantry_alpha}, function(context)
		local squad_atgun_decrew_vs_infantry_alpha_victim = Test_CreateAndSpawnSquad(SBP.GERMAN.PAK40_75MM_AT_GUN_SQUAD_MP, player01, mkr_atgun_vs_infantry_spawn_alpha_01)
		local squad_atgun_decrew_vs_infantry_alpha_killer = Test_CreateAndSpawnSquad(SBP.SOVIET.SHOCK_TROOPS_MP, player02, mkr_atgun_vs_infantry_spawn_alpha_02)
	end)

	-- AT Gun decrew vs. infantry [bravo]
	Test_Describe({description = "Report abandon of ZiS", markers = mkr_test_atgun_vs_infantry_bravo}, function(context)
		local squad_atgun_decrew_vs_infantry_bravo_killer = Test_CreateAndSpawnSquad(SBP.GERMAN.PANZER_GRENADIER_SQUAD_MP, player01, mkr_atgun_vs_infantry_spawn_bravo_01)
		local squad_atgun_decrew_vs_infantry_bravo_victim = Test_CreateAndSpawnSquad(SBP.SOVIET.M1942_ZIS_3_76MM_AT_GUN_SQUAD_MP, player02, mkr_atgun_vs_infantry_spawn_bravo_02)
	end)

	-- Light tank vs. medium tank [alpha]
	Test_Describe({description = "Report death of Puma", markers = mkr_test_light_tank_vs_medium_tank_alpha}, function(context)
		local squad_light_tank_vs_medium_tank_alpha_victim = Test_CreateAndSpawnSquad(SBP.GERMAN.PUMA_EAST_GERMAN_MP, player01, mkr_light_tank_vs_medium_tank_alpha_01)
		local squad_light_tank_vs_medium_tank_alpha_killer = Test_CreateAndSpawnSquad(SBP.SOVIET.T_34_85_SQUAD_MP, player02, mkr_light_tank_vs_medium_tank_alpha_02)
	end)

	-- Light tank vs. medium tank [bravo]
	Test_Describe({description = "Report death of T-70", markers = mkr_test_light_tank_vs_medium_tank_bravo}, function(context)
		local squad_light_tank_vs_medium_tank_bravo_killer = Test_CreateAndSpawnSquad(SBP.GERMAN.PANZER_IV_SQUAD_MP, player01, mkr_light_tank_vs_medium_tank_bravo_01)
		local squad_light_tank_vs_medium_tank_bravo_victim = Test_CreateAndSpawnSquad(SBP.SOVIET.T_70M_MP, player02, mkr_light_tank_vs_medium_tank_bravo_02)
	end)

	-- Light tank with vehicle crew vs. medium tank [alpha]
	Test_Describe({description = "Report death of Stuart, not vehicle crew", markers = mkr_test_vehicle_with_crew_natural_death_alpha}, function(context)
		local squad_vehicle_crew_natural_death_alpha_victim = Test_CreateAndSpawnSquad(SBP.AEF.M5A1_STUART_SQUAD_MP, player01, mkr_vehicle_with_crew_natural_death_alpha_01)
		local squad_vehicle_crew_natural_death_alpha_killer = Test_CreateAndSpawnSquad(SBP.GERMAN.STUG_III_SQUAD_MP, player02, mkr_vehicle_with_crew_natural_death_alpha_02)
	end)

	-- Light tank with vehicle crew vs. medium tank [bravo]
	Test_Describe({description = "Report death of Greyhound, not vehicle crew", markers = mkr_test_vehicle_with_crew_natural_death_bravo}, function(context)
		local squad_vehicle_crew_natural_death_bravo_killer = Test_CreateAndSpawnSquad(SBP.GERMAN.OSTWIND_SQUAD_MP, player01, mkr_vehicle_with_crew_natural_death_bravo_01)
		local squad_vehicle_crew_natural_death_bravo_victim = Test_CreateAndSpawnSquad(SBP.AEF.M8_GREYHOUND_SQUAD_MP, player02, mkr_vehicle_with_crew_natural_death_bravo_02)
	end)

	-- Vehicle abandon [alpha]
	Test_Describe({description = "Report Stug abandon", markers = mkr_test_vehicle_abandon_alpha}, function(context)
		local squad_vehicle_abandon_alpha = Test_CreateAndSpawnSquad(SBP.GERMAN.STUG_III_SQUAD_MP, player01, mkr_vehicle_abandon_alpha_01)
		Util_Delay(3, function()
			Cmd_CriticalHit(player01, squad_vehicle_abandon_alpha.sgroup, CRIT.VEHICLE_ABANDON, 1)
		end)
	end)

	-- Vehicle abandon [alpha]
	Test_Describe({description = "Report SU-76 abandon", markers = mkr_test_vehicle_abandon_bravo}, function(context)
		local squad_vehicle_abandon_bravo = Test_CreateAndSpawnSquad(SBP.SOVIET.SU_76M_MP, player02, mkr_vehicle_abandon_bravo_01)
		Util_Delay(3, function()
			Cmd_CriticalHit(player02, squad_vehicle_abandon_bravo.sgroup, CRIT.VEHICLE_ABANDON, 1)
		end)
	end)

	-- Vehicle disembark [alpha]
	Test_Describe({description = "Don't report Sherman or Ambulance abandon", markers = mkr_test_vehicle_disembark_alpha}, function(context)
		local squad_disembark_alpha_01 = Test_CreateAndSpawnSquad(SBP.AEF.M4A3_SHERMAN_SQUAD_MP, player01, mkr_vehicle_disembark_alpha_01)
		local squad_disembark_alpha_02 = Test_CreateAndSpawnSquad(SBP.AEF.DODGE_WC51_AMBULANCE_SQUAD_MP, player01, mkr_vehicle_disembark_alpha_02)
		Util_Delay(1, function()
			Cmd_Ability(squad_disembark_alpha_01.sgroup, ABILITY.AEF.VEHICLE_DECREW_VEHICLE_CREW_MP)
			Cmd_Ability(squad_disembark_alpha_02.sgroup, ABILITY.AEF.VEHICLE_DECREW_MEDICS_MP)
		end)
	end)

	-- Vehicle disembark [bravo]
	Test_Describe({description = "Don't report Sherman or Ambulance abandon", markers = mkr_test_vehicle_disembark_bravo} , function(context)
		local squad_disembark_bravo_01 = Test_CreateAndSpawnSquad(SBP.AEF.M4A3_SHERMAN_SQUAD_MP, player02, mkr_vehicle_disembark_bravo_01)
		local squad_disembark_bravo_02 = Test_CreateAndSpawnSquad(SBP.AEF.DODGE_WC51_AMBULANCE_SQUAD_MP, player02, mkr_vehicle_disembark_bravo_02)
		Util_Delay(1, function()
			Cmd_Ability(squad_disembark_bravo_01.sgroup, ABILITY.AEF.VEHICLE_DECREW_VEHICLE_CREW_MP)
			Cmd_Ability(squad_disembark_bravo_02.sgroup, ABILITY.AEF.VEHICLE_DECREW_MEDICS_MP)
		end)
	end)

	-- re-crewed AT Gun decrew vs. infantry [alpha]
	Test_Describe({description = "Report abandon of Pak40\nDon't report death of withdrawing squad", markers = mkr_test_atgun_decrew_recrew_vs_infantry_alpha}, function(context)
		local entity_recrew_alpha = Test_SpawnAbandonedTeamWeapon(EBP.GERMAN.PAK40_75MM_AT_GUN_MP, mkr_atgun_decrew_recrew_vs_infantry_spawn_alpha_01)
		local squad_recrew_alpha = Test_CreateAndSpawnSquad(SBP.GERMAN.PIONEER_SQUAD_MP, player01, mkr_atgun_decrew_recrew_vs_infantry_spawn_alpha_01)
		local squad_decrew_recrewed_alpha = nil
		Cmd_CaptureTeamWeapon(squad_recrew_alpha.sgroup, entity_recrew_alpha.egroup, false)
		Util_Delay(3, function()
			Squad_SetInvulnerable(squad_recrew_alpha.squad, true, 0)
			Cmd_Move(squad_recrew_alpha.sgroup, World_Pos(0, 0, 0))
			squad_decrew_recrewed_alpha = Test_CreateAndSpawnSquad(SBP.SOVIET.SHOCK_TROOPS_MP, player02, mkr_atgun_decrew_recrew_vs_infantry_spawn_alpha_02)
		end)
	end)

	-- re-crewed AT Gun decrew vs. infantry [bravo]
	Test_Describe({description = "Report abandon of ZiS\nDon't report death of withdrawing squad", markers = mkr_test_atgun_decrew_recrew_vs_infantry_bravo}, function(context)
		local entity_recrew_bravo = Test_SpawnAbandonedTeamWeapon(EBP.SOVIET.M1942_76MM_DIVISIONAL_GUN_ZIS_3_MP, mkr_atgun_decrew_recrew_vs_infantry_spawn_bravo_01)
		local squad_recrew_bravo = Test_CreateAndSpawnSquad(SBP.SOVIET.COMBAT_ENGINEER_SQUAD_MP, player02, mkr_atgun_decrew_recrew_vs_infantry_spawn_bravo_01)
		local squad_decrew_recrewed_bravo = nil
		Cmd_CaptureTeamWeapon(squad_recrew_bravo.sgroup, entity_recrew_bravo.egroup, false)
		Util_Delay(3, function()
			Squad_SetInvulnerable(squad_recrew_bravo.squad, true, 0)
			Cmd_Move(squad_recrew_bravo.sgroup, World_Pos(0, 0, 0))
			squad_decrew_recrewed_bravo = Test_CreateAndSpawnSquad(SBP.GERMAN.PANZER_GRENADIER_SQUAD_MP, player01, mkr_atgun_decrew_recrew_vs_infantry_spawn_bravo_02)
		end)
	end)

	-- Vehicle with crew death [alpha]
	Test_Describe({description = "Report death of Sherman and Ambulance\nDon't report death of vehicle crews", markers = mkr_test_vehicle_with_crew_death_alpha}, function(context)
		local squad_vehicle_crew_death_alpha_01 = Test_CreateAndSpawnSquad(SBP.AEF.M4A3_SHERMAN_SQUAD_MP, player01, mkr_vehicle_with_crew_death_alpha_01)
		local squad_vehicle_crew_death_alpha_02 = Test_CreateAndSpawnSquad(SBP.AEF.DODGE_WC51_AMBULANCE_SQUAD_MP, player01, mkr_vehicle_with_crew_death_alpha_02)
		Util_Delay(2, function()
			Squad_SetHealth(squad_vehicle_crew_death_alpha_01.squad, 0.01)
			Squad_SetHealth(squad_vehicle_crew_death_alpha_02.squad, 0.01)
			Test_CreateAndSpawnSquad(SBP.GERMAN.PANZER_IV_SQUAD_MP, player02, mkr_test_vehicle_with_crew_death_alpha)
		end)
	end)

	-- Vehicle with crew death [bravo]
	Test_Describe({description = "Report death of Sherman and Ambulance\nDon't report death of vehicle crews", markers = mkr_test_vehicle_with_crew_death_bravo}, function(context)
		local squad_vehicle_crew_death_bravo_01 = Test_CreateAndSpawnSquad(SBP.AEF.M4A3_SHERMAN_SQUAD_MP, player01, mkr_vehicle_with_crew_death_bravo_01)
		local squad_vehicle_crew_death_bravo_02 = Test_CreateAndSpawnSquad(SBP.AEF.DODGE_WC51_AMBULANCE_SQUAD_MP, player01, mkr_vehicle_with_crew_death_bravo_02)
		Util_Delay(2, function()
			Squad_SetHealth(squad_vehicle_crew_death_bravo_01.squad, 0.01)
			Squad_SetHealth(squad_vehicle_crew_death_bravo_02.squad, 0.01)
			Test_CreateAndSpawnSquad(SBP.GERMAN.PANZER_IV_SQUAD_MP, player02, mkr_test_vehicle_with_crew_death_bravo)
		end)
	end)

	-- Vehicle with special crew death [alpha]
	Test_Describe({description = "Report death of Sherman\nReport death of riflemen squad (special crew)", markers = mkr_test_special_vehicle_crew_death_alpha}, function(context)
		local entity_special_vehicle_crew_alpha_01 = Test_SpawnAbandonedTeamWeapon(EBP.AEF.M4A3_SHERMAN_MP, mkr_special_vehicle_crew_death_alpha_01)
		local squad_special_vehicle_crew_alpha_02 = Test_CreateAndSpawnSquad(SBP.AEF.RIFLEMEN_SQUAD_MP, player01, mkr_special_vehicle_crew_death_alpha_02)
		Util_Delay(3, function()
			Command_SquadEntity(player01, squad_special_vehicle_crew_alpha_02.sgroup, SCMD_Recrew, entity_special_vehicle_crew_alpha_01.egroup, false)
			Util_Delay(3, function()
				-- Kill the squad that the newly created driver squad drives
				SGroup_ForEach(Player_GetSquads(Squad_GetPlayerOwner(squad_special_vehicle_crew_alpha_02.squad)), function(_, _, squad)
					local driver = Squad_GetVehicleMobileDriverSquad(squad)
					if driver ~= nil and Squad_GetGameID(driver) == Squad_GetGameID(squad_special_vehicle_crew_alpha_02.squad) then
						Squad_SetHealth(squad, 0.01)
						Test_CreateAndSpawnSquad(SBP.GERMAN.STUG_III_SQUAD_MP, player02, mkr_test_special_vehicle_crew_death_alpha)
					end
				end)
			end)
		end)
	end)

	-- Vehicle with special crew death [bravo]
	Test_Describe({description = "Report death of Sherman\nReport death of riflemen squad (special crew)", markers = mkr_test_special_vehicle_crew_death_bravo}, function(context)
		local entity_special_vehicle_crew_bravo_01 = Test_SpawnAbandonedTeamWeapon(EBP.AEF.M4A3_SHERMAN_MP, mkr_special_vehicle_crew_death_bravo_01)
		local squad_special_vehicle_crew_bravo_02 = Test_CreateAndSpawnSquad(SBP.AEF.RIFLEMEN_SQUAD_MP, player02, mkr_special_vehicle_crew_death_bravo_02)
		Util_Delay(3, function()
			Command_SquadEntity(player02, squad_special_vehicle_crew_bravo_02.sgroup, SCMD_Recrew, entity_special_vehicle_crew_bravo_01.egroup, false)
			Util_Delay(3, function()
				-- Kill the squad that the newly created driver squad drives
				SGroup_ForEach(Player_GetSquads(Squad_GetPlayerOwner(squad_special_vehicle_crew_bravo_02.squad)), function(_, _, squad)
					local driver = Squad_GetVehicleMobileDriverSquad(squad)
					if driver ~= nil and Squad_GetGameID(driver) == Squad_GetGameID(squad_special_vehicle_crew_bravo_02.squad) then
						Squad_SetHealth(squad, 0.01)
						Test_CreateAndSpawnSquad(SBP.GERMAN.STUG_III_SQUAD_MP, player01, mkr_test_special_vehicle_crew_death_bravo)
					end
				end)
			end)
		end)
	end)

	-- Destruction of annihilation_condition entities [alpha]
	-- These entities will be destroyed before OKW truck conversion tests that could be blocked
	Test_Describe({description = "Report death annihilation condition entities (6)", markers = mkr_test_entity_annihilation_condition}, function(context)
		local entity_01 = Test_CreateAndSpawnEntity(EBP.WEST_GERMAN.INFANTRY_SUPPORT_MP, player01, mkr_entity_annihilation_condition_death_01)
		local entity_02 = Test_CreateAndSpawnEntity(EBP.SOVIET.HQ_MP, player01, mkr_entity_annihilation_condition_death_02)
		local entity_03 = Test_CreateAndSpawnEntity(EBP.GERMAN.DOLCH_AKTIONEN_MP, player01, mkr_entity_annihilation_condition_death_03)
		local entity_04 = Test_CreateAndSpawnEntity(EBP.SOVIET.TANK_DEPOT_MP, player01, mkr_entity_annihilation_condition_death_04)
		local entity_05 = Test_CreateAndSpawnEntity(EBP.AEF.RIFLE_COMMAND_MP, player01, mkr_entity_annihilation_condition_death_05)
		local entity_06 = Test_CreateAndSpawnEntity(EBP.BRITISH.BRITISH_BUILDING_2_MP, player01, mkr_entity_annihilation_condition_death_06)
		Util_Delay(1, function()
			Entity_SetHealth(entity_01.entity, 0.01)
			Entity_SetHealth(entity_02.entity, 0.01)
			Entity_SetHealth(entity_03.entity, 0.01)
			Entity_SetHealth(entity_04.entity, 0.01)
			Entity_SetHealth(entity_05.entity, 0.01)
			Entity_SetHealth(entity_06.entity, 0.01)
			local aec = Test_CreateAndSpawnSquad(SBP.BRITISH.AEC_ARMOURED_CAR_SQUAD_MP, player02, mkr_test_entity_annihilation_condition)
			Cmd_Attack(aec.sgroup, entity_01.egroup, true, false)
			Cmd_Attack(aec.sgroup, entity_02.egroup, true, false)
			Cmd_Attack(aec.sgroup, entity_03.egroup, true, false)
			Cmd_Attack(aec.sgroup, entity_04.egroup, true, false)
			Cmd_Attack(aec.sgroup, entity_05.egroup, true, false)
			Cmd_Attack(aec.sgroup, entity_06.egroup, true, false)
		end)
	end)

	-- Destruction of squad based emplacements [alpha]
	Test_Describe({description = "Report death of Bofors and mortar pit", markers = mkr_test_squad_based_emplacement_alpha}, function(context)
		local squad_based_emplacement_alpha_01 = Test_CreateAndSpawnSquad(SBP.BRITISH.BRIT_BOFORS_40MM_AUTOCANNON_SQUAD_MP, player01, mkr_squad_based_emplacement_death_alpha_01)
		local squad_based_emplacement_alpha_02 = Test_CreateAndSpawnSquad(SBP.BRITISH.BRIT_3_INCH_MORTAR_TEAM_MP, player01, mkr_squad_based_emplacement_death_alpha_02)
		Util_Delay(6, function()
			Squad_SetHealth(squad_based_emplacement_alpha_01.squad, 0.01)
			Squad_SetHealth(squad_based_emplacement_alpha_02.squad, 0.01)
			Test_CreateAndSpawnSquad(SBP.WEST_GERMAN.PANZER_II_LUCHS_SQUAD_MP, player02, mkr_test_squad_based_emplacement_alpha)
		end)
	end)

	-- Destruction of squad based emplacements [bravo]
	Test_Describe({description = "Report death of pak43 and flak", markers = mkr_test_squad_based_emplacement_bravo}, function(context)
		local squad_based_emplacement_bravo_01 = Test_CreateAndSpawnSquad(SBP.GERMAN.PAK43_88MM_AT_GUN_SQUAD_MP, player02, mkr_squad_based_emplacement_death_bravo_01)
		local squad_based_emplacement_bravo_02 = Test_CreateAndSpawnSquad(SBP.WEST_GERMAN.FLAK_EMPLACEMENT, player02, mkr_squad_based_emplacement_death_bravo_02)
		Util_Delay(7, function()
			Squad_SetHealth(squad_based_emplacement_bravo_01.squad, 0.01)
			Squad_SetHealth(squad_based_emplacement_bravo_02.squad, 0.01)
			Test_CreateAndSpawnSquad(SBP.WEST_GERMAN.PANZER_II_LUCHS_SQUAD_MP, player01, mkr_test_squad_based_emplacement_bravo)
		end)
	end)

	-- Cancellation of unfinished squad based emplacement
	Test_Describe({description = "Don't report death of cancelled Bofors?", markers = mkr_test_cancel_squad_based_emplacement_alpha}, function(context)
		EGroup_InstantCaptureStrategicPoint(eg_cancel_squad_based_emplacement_alpha_territories, player01)
		local squad_cancel_emplacement_alpha_01 = Test_CreateAndSpawnSquad(SBP.BRITISH.SAPPER_SQUAD_MP, player01, mkr_cancel_squad_based_emplacement_alpha_02)
		Util_Delay(1, function()
			Cmd_Construct(squad_cancel_emplacement_alpha_01.sgroup, EBP.BRITISH.BRIT_BOFORS_40MM_AUTOCANNON_MP, mkr_cancel_squad_based_emplacement_alpha_01, Util_GetPosition(mkr_cancel_squad_based_emplacement_alpha_02), false)

			Util_Delay(8, function()
				local sgroup = SGroup_Create("")
				World_GetSquadsNearMarker(player01, sgroup, mkr_cancel_squad_based_emplacement_alpha_01, OT_Player)
				SGroup_Filter(sgroup, SBP.BRITISH.BRIT_BOFORS_40MM_AUTOCANNON_SQUAD_MP, FILTER_KEEP)
				Command_Squad(player01, sgroup, SCMD_Destroy, false)
			end)
		end)
	end)

	-- Death of unfinished squad based emplacement
	Test_Describe({description = "Report death of killed unfinished bofors?", markers =  mkr_test_kill_unfinished_squad_based_emplacement}, function(context)
		EGroup_InstantCaptureStrategicPoint(eg_kill_unfinished_squad_based_emplacement_territories, player02)
		local squad_sappers = Test_CreateAndSpawnSquad(SBP.BRITISH.SAPPER_SQUAD_MP, player02, mkr_kill_unfinished_squad_based_emplacement_spawn)
		Util_Delay(1, function()
			Cmd_Construct(squad_sappers.sgroup, EBP.BRITISH.BRIT_BOFORS_40MM_AUTOCANNON_MP, mkr_kill_unfinished_squad_based_emplacement_target, Util_GetPosition(mkr_kill_unfinished_squad_based_emplacement_spawn), false)
			Util_Delay(8, function()
				local sgroup = SGroup_Create("")
				World_GetSquadsNearMarker(player01, sgroup, mkr_cancel_squad_based_emplacement_alpha_01, OT_Player)
				SGroup_Filter(sgroup, SBP.BRITISH.BRIT_BOFORS_40MM_AUTOCANNON_SQUAD_MP, FILTER_KEEP)
				local squad_hetzer = Test_CreateAndSpawnSquad(SBP.WEST_GERMAN.HETZER_SQUAD_MP, player01, mkr_kill_unfinished_squad_based_emplacement_spawn)
				Util_DelayTicks(1, function()
					Cmd_Attack(squad_hetzer.sgroup, sgroup)
				end)
			end)
		end)
	end)

	-- Tear down emplacement
	Test_Describe({description = "Don't report torn down emplacement?", markers = mkr_test_tear_down_squad_based_emplacement}, function(context)
		EGroup_InstantCaptureStrategicPoint(eg_tear_down_squad_based_emplacement_territories, player01)
		local squad_sapper = Test_CreateAndSpawnSquad(SBP.BRITISH.SAPPER_SQUAD_MP, player01, mkr_tear_down_squad_based_emplacement_spawn)
		local squad_emplacement = Test_CreateAndSpawnSquad(SBP.BRITISH.BRIT_BOFORS_40MM_AUTOCANNON_SQUAD_MP, player01, mkr_tear_down_squad_based_emplacement_target)
		Util_Delay(1, function()
			Command_SquadSquadAbility(player01, squad_sapper.sgroup, squad_emplacement.sgroup,  ABILITY.BRITISH.SAPPER_EMPLACEMENT_TEAR_DOWN, true, false)
		end)
	end)

	-- Kill during Tear down emplacement
	Test_Describe({description = "Detect death during tear down?", markers = mkr_test_kill_during_tear_down_squad_based_emplacement_alpha}, function(context)
		EGroup_InstantCaptureStrategicPoint(eg_kill_during_tear_down_squad_based_emplacement_alpha_territories, player01)
		local squad_sapper = Test_CreateAndSpawnSquad(SBP.BRITISH.SAPPER_SQUAD_MP, player01, mkr_kill_during_tear_down_squad_based_emplacement_alpha_02)
		local squad_emplacement = Test_CreateAndSpawnSquad(SBP.BRITISH.BRIT_BOFORS_40MM_AUTOCANNON_SQUAD_MP, player01, mkr_kill_during_tear_down_squad_based_emplacement_alpha_01)
		Util_Delay(1, function()
			Command_SquadSquadAbility(player01, squad_sapper.sgroup, squad_emplacement.sgroup,  ABILITY.BRITISH.SAPPER_EMPLACEMENT_TEAR_DOWN, true, false)
			Util_Delay(5, function()
				Squad_SetHealth(squad_emplacement.squad, 0.01)
				Test_CreateAndSpawnSquad(SBP.WEST_GERMAN.HETZER_SQUAD_MP, player02, mkr_kill_during_tear_down_squad_based_emplacement_alpha_02, mkr_kill_during_tear_down_squad_based_emplacement_alpha_01)
			end)
		end)
	end)

	-- Cancel OKW truck conversion
	Test_Describe({description = "Don't report cancelled conversion?", markers = mkr_test_cancel_okw_truck_conversion}, function(context)
		EGroup_InstantCaptureStrategicPoint(eg_cancel_okw_truck_conversion_territories, player01)
		local squad_sws = Test_CreateAndSpawnSquad(SBP.WEST_GERMAN.SWS_HALFTRACK_SQUAD_MP, player01, mkr_cancel_okw_truck_conversion_target)
		Command_SquadPosAbility(player01, squad_sws.sgroup, Util_GetPosition(mkr_cancel_okw_truck_conversion_target), ABILITY.WEST_GERMAN.CONSTRUCT_INFANTRY_BARRACKS, true, false)
		Util_Delay(5, function()
			local egroup = EGroup_Create("")
			World_GetEntitiesNearMarker(player01, egroup, mkr_cancel_okw_truck_conversion_target, OT_Player)
			EGroup_Filter(egroup, EBP.WEST_GERMAN.HEAVY_ARMOR_SUPPORT_MP, FILTER_KEEP)
			Command_Entity(player01, egroup, CMD_Destroy)
		end)
	end)

	-- Death of unfinished OKW truck conversion
	Test_Describe({description = "Report death of unfinished conversion?", markers = mkr_test_kill_okw_truck_conversion, focus = true}, function(context)
		EGroup_InstantCaptureStrategicPoint(eg_kill_okw_truck_conversion_territories, player01)
		local squad_sws = Test_CreateAndSpawnSquad(SBP.WEST_GERMAN.SWS_HALFTRACK_SQUAD_MP, player01, mkr_kill_okw_truck_conversion_target)
		Command_SquadPosAbility(player01, squad_sws.sgroup, Util_GetPosition(mkr_kill_okw_truck_conversion_target), ABILITY.WEST_GERMAN.CONSTRUCT_TANK_COMMAND, true, false)
		Util_Delay(5, function()
			local egroup = EGroup_Create("")
			World_GetEntitiesNearMarker(player01, egroup, mkr_kill_okw_truck_conversion_target, OT_Player)
			EGroup_Filter(egroup, EBP.WEST_GERMAN.LIGHT_ARMOR_SUPPORT_MP, FILTER_KEEP)
			EGroup_SetAvgHealth(egroup, 0.01)
			Test_CreateAndSpawnSquad(SBP.SOVIET.KV_8_MP, player02, mkr_kill_okw_truck_conversion_spawn, mkr_kill_okw_truck_conversion_target)
		end)
	end)

	-- Scuttle pak43 [alpha]
	Test_Describe({description = "Report the death of scuttled pak43", markers = mkr_test_scuttle_pak43_alpha}, function(context)
		local squad_pak43_scuttle_alpha = Test_CreateAndSpawnSquad(SBP.GERMAN.PAK43_88MM_AT_GUN_SQUAD_MP, player01, mkr_scuttle_pak43_alpha_01)
		Util_Delay(1, function()
			Command_SquadAbility(player01, squad_pak43_scuttle_alpha.sgroup, ABILITY.AEF.USF_HOLD_FIRE_MP, true, false)
			Util_Delay(1, function()
				Command_SquadAbility(player01, squad_pak43_scuttle_alpha.sgroup, ABILITY.GERMAN.SCUTTLE_PAK43_TIMED, true, false)
			end)
		end)
	end)

	-- Destruction of non-annihilation_condition entities [alpha]
	Test_Describe({description = "Don't report death of regular entities", markers = mkr_test_entity_non_annihilation_condition_alpha}, function(context)
		local entity_non_annihilation_condition_alpha_01 = Test_CreateAndSpawnEntity(EBP.GERMAN.BUNKER_MP, player01, mkr_entity_non_annihilation_condition_death_alpha_01)
		local entity_non_annihilation_condition_alpha_02 = Test_CreateAndSpawnEntity(EBP.SOVIET.MACHINE_GUN_NEST_MP, player01, mkr_entity_non_annihilation_condition_death_alpha_02)
		Util_Delay(4, function()
			Entity_SetHealth(entity_non_annihilation_condition_alpha_01.entity, 0.01)
			Entity_SetHealth(entity_non_annihilation_condition_alpha_02.entity, 0.01)
			Test_CreateAndSpawnSquad(SBP.SOVIET.T_70M_MP, player02, mkr_test_entity_non_annihilation_condition_alpha)
		end)
	end)

	-- Destruction of non-annihilation_condition entities [bravo]
	Test_Describe({description = "Don't report death of regular entities", markers = mkr_test_entity_non_annihilation_condition_bravo}, function(context)
		local entity_non_annihilation_condition_bravo_01 = Test_CreateAndSpawnEntity(EBP.BRITISH.BRIT_FORWARD_HQ_MP, player02, mkr_entity_non_annihilation_condition_death_bravo_01)
		local entity_non_annihilation_condition_bravo_02 = Test_CreateAndSpawnEntity(EBP.AEF.FIGHTING_POSITION_MP, player02, mkr_entity_non_annihilation_condition_death_bravo_02)
		Util_Delay(5, function()
			Entity_SetHealth(entity_non_annihilation_condition_bravo_01.entity, 0.01)
			Entity_SetHealth(entity_non_annihilation_condition_bravo_02.entity, 0.01)
			Test_CreateAndSpawnSquad(SBP.SOVIET.T_70M_MP, player01, mkr_test_entity_non_annihilation_condition_bravo)
		end)
	end)

	-- Don't report deaths of airplanes [alpha & bravo]
	Test_Describe({description = "Don't report deaths of aircraft", markers = {mkr_spawn_antiair_player_01, mkr_spawn_antiair_player_02}}, function(context)
		local squad_aa_alpha_01 = Test_CreateAndSpawnSquad(SBP.SOVIET.M5_HALFTRACK_SQUAD_MP, player01, mkr_spawn_antiair_player_01)
		local squad_aa_alpha_02 = Test_CreateAndSpawnSquad(SBP.SOVIET.M5_HALFTRACK_SQUAD_MP, player01, mkr_spawn_antiair_player_01)
		Cmd_InstantUpgrade(squad_aa_alpha_01.sgroup, UPG.SOVIET.M5_HALFTRACK_72K_AA_GUN_PACKAGE_MP, 1)
		Cmd_InstantUpgrade(squad_aa_alpha_02.sgroup, UPG.SOVIET.M5_HALFTRACK_72K_AA_GUN_PACKAGE_MP, 1)
		
		local squad_aa_bravo_01 = Test_CreateAndSpawnSquad(SBP.SOVIET.M5_HALFTRACK_SQUAD_MP, player02, mkr_spawn_antiair_player_02)
		local squad_aa_bravo_02 = Test_CreateAndSpawnSquad(SBP.SOVIET.M5_HALFTRACK_SQUAD_MP, player02, mkr_spawn_antiair_player_02)
		Cmd_InstantUpgrade(squad_aa_bravo_01.sgroup, UPG.SOVIET.M5_HALFTRACK_72K_AA_GUN_PACKAGE_MP, 1)
		Cmd_InstantUpgrade(squad_aa_bravo_02.sgroup, UPG.SOVIET.M5_HALFTRACK_72K_AA_GUN_PACKAGE_MP, 1)
		
		Test_AddAndUnlockPlayerAbility(ABILITY.GERMAN.STUKA_AIR_RECON, player01)
		Test_AddAndUnlockPlayerAbility(ABILITY.GERMAN.STUKA_AIR_RECON, player02)
		
		Test_AddAndUnlockPlayerAbility(ABILITY.GERMAN.STUKA_SMOKE_BOMB, player01)
		Test_AddAndUnlockPlayerAbility(ABILITY.GERMAN.STUKA_SMOKE_BOMB, player02)	

		Util_Delay(3, function()
			Cmd_Ability(player01, ABILITY.GERMAN.STUKA_AIR_RECON, Util_GetPosition(mkr_call_airstrikes), nil, true, false)
			Cmd_Ability(player02, ABILITY.GERMAN.STUKA_AIR_RECON, Util_GetPosition(mkr_call_airstrikes), nil, true, false)
			Cmd_Ability(player01, ABILITY.GERMAN.STUKA_SMOKE_BOMB, Util_GetPosition(mkr_call_airstrikes), World_Pos(1, 0, 1), true, false)
			Cmd_Ability(player02, ABILITY.GERMAN.STUKA_SMOKE_BOMB, Util_GetPosition(mkr_call_airstrikes), World_Pos(1, 0, 1), true, false)
		end)
	end)

end
